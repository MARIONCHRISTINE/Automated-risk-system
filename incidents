-- Create fresh risk_incidents table based on report_risk.php requirements
CREATE TABLE risk_incidents (
    id INT AUTO_INCREMENT PRIMARY KEY,
    risk_name VARCHAR(255) NOT NULL,
    risk_description TEXT NOT NULL,
    cause_of_risk TEXT,
    department VARCHAR(100),
    reported_by INT NOT NULL,
    risk_owner_id INT NOT NULL,
    existing_or_new VARCHAR(20),
    risk_categories TEXT, -- JSON array of selected categories
    category_details LONGTEXT, -- JSON object with category-specific details
    inherent_likelihood INT NOT NULL CHECK (inherent_likelihood BETWEEN 1 AND 4),
    inherent_consequence INT NOT NULL CHECK (inherent_consequence BETWEEN 1 AND 4),
    risk_rating INT NOT NULL, -- calculated as likelihood Ã— consequence
    treatment_action TEXT,
    controls_action_plans TEXT,
    target_completion_date DATE,
    progress_update TEXT,
    treatment_status VARCHAR(50),
    risk_status VARCHAR(50),
    involves_money_loss TINYINT(1) DEFAULT 0,
    money_amount DECIMAL(15,2) DEFAULT 0.00,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_reported_by (reported_by),
    INDEX idx_risk_owner (risk_owner_id),
    INDEX idx_department (department),
    INDEX idx_risk_status (risk_status),
    INDEX idx_created_at (created_at)
);

-- Create related risk_category_details table
CREATE TABLE risk_category_details (
    id INT AUTO_INCREMENT PRIMARY KEY,
    risk_id INT NOT NULL,
    risk_category VARCHAR(100) NOT NULL,
    category_description TEXT,
    category_type VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (risk_id) REFERENCES risk_incidents(id) ON DELETE CASCADE,
    INDEX idx_risk_id (risk_id),
    INDEX idx_category (risk_category)
);

-- Create risk_documents table for file uploads
CREATE TABLE risk_documents (
    id INT AUTO_INCREMENT PRIMARY KEY,
    risk_id INT NOT NULL,
    section_type VARCHAR(50) NOT NULL,
    original_filename VARCHAR(255) NOT NULL,
    stored_filename VARCHAR(255) NOT NULL,
    file_path VARCHAR(500) NOT NULL,
    file_size INT NOT NULL,
    uploaded_by INT NOT NULL,
    uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (risk_id) REFERENCES risk_incidents(id) ON DELETE CASCADE,
    INDEX idx_risk_id (risk_id),
    INDEX idx_section_type (section_type),
    INDEX idx_uploaded_by (uploaded_by)
);
